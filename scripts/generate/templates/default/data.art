import type { FormSchemaGetter } from '#/adapter/form';
import type { VxeGridProps } from '#/adapter/vxe-table';

import { <{className}>Dict } from '#/api/<{schemaGroupCode}>/<{className}>/types';
import { getDictOptions } from '#/utils/dict';
import { renderDict } from '#/utils/render';<{if ext.customFormComponentList && ext.customFormComponentList.length > 0}>

//  自定义表单组件
<{each ext.customFormComponentList}>import <{capitalize($value.componentName)}> from './components/<{$value.componentName}>.vue';
<{/each}><{/if}><{if ext.customViewComponentList && ext.customViewComponentList.length > 0}>

// 自定义列表组件
<{each ext.customViewComponentList}>import <{capitalize($value.componentName)}> from './components/<{$value.componentName}>.vue';
<{/each}><{/if}>

export const querySchema: FormSchemaGetter = () => [
<{each columns}><{if $value.isQuery == '1'}>
  {
    component: '<{$value.component || 'Input'}>',
    fieldName: '<{$value.javaField}>',
    label: '<{$value.columnComment}>',<{if $value.dictType}>
    componentProps: {
      options:  getDictOptions(<{className}>Dict.<{$value.dictType}>),

    },<{else if $value.htmlType == 'radio'}>
    componentProps: {
      options: [
        { label: '是', value: '1' },
        { label: '否', value: '0' },
      ],
    },<{else if $value.htmlType == 'checkbox'}>
    componentProps: {
      options: [
        { label: '选项1', value: '1' },
        { label: '选项2', value: '2' },
      ],
    },<{else if $value.htmlType == 'datetime'}>
    componentProps: {<{if $value.component == 'RangePicker'}>
      showTime: true,<{else}>
      showTime: true,<{/if}>
      format: 'YYYY-MM-DD HH:mm:ss',
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
    },<{else if $value.htmlType == 'date'}>
    componentProps: {
      format: 'YYYY-MM-DD',
      valueFormat: 'YYYY-MM-DD',
    },<{else if $value.htmlType == 'time'}>
    componentProps: {<{if $value.component == 'RangePicker'}>
      picker: 'time',<{/if}>
      format: 'HH:mm:ss',
      valueFormat: 'HH:mm:ss',
    },<{/if}>
  },
<{/if}><{/each}>
];

export const columns: VxeGridProps['columns'] = [
  { type: 'checkbox', width: 60 },
<{each columns}><{if $value.isList == '1'}>
  {
    title: '<{$value.columnComment}>',
    field: '<{$value.javaField}>',<{if $value.dictType}>
    width: 120,
    slots: {
      default: ({ row }) => {
        return renderDict(row.<{$value.javaField}>,  <{className}>Dict.<{$value.dictType}>);
      },
    },<{/if}><{if $value.columnName == 'create_time' || $value.columnName == 'update_time'}>
    width: 180,<{/if}>
  },
<{/if}><{/each}>
  {
    field: 'action',
    fixed: 'right',
    slots: { default: 'action' },
    title: '操作',
    width: 180,
  },
];

export const modalSchema: FormSchemaGetter = () => [
<{each columns}>

  <{if $value.isPk == '1'}>
    {
      fieldName: '<{$value.javaField}>'
    },
  <{/if}>

  <{if $value.isInsert == '1' && $value.isPk != '1'}>
    {
      fieldName: '<{$value.javaField}>',
      component: '<{$value.component || 'Input'}>',
      label: '<{$value.columnComment}>',<{if $value.isRequired == '1'}>
      rules: 'required',<{/if}><{if $value.dictType}>
      componentProps: {
         buttonStyle: 'solid',
        options:  getDictOptions(<{className}>Dict.<{$value.dictType}>),
        optionType: 'button',
      },
      defaultValue: '0',
      <{else if $value.htmlType == 'radio'}>
      componentProps: {
        options: [
          { label: '是', value: '1' },
          { label: '否', value: '0' },
        ],
      },<{else if $value.htmlType == 'checkbox'}>
      componentProps: {
        options: [
          { label: '选项1', value: '1' },
          { label: '选项2', value: '2' },
        ],
      },<{else if $value.htmlType == 'datetime'}>
      componentProps: {
        showTime: true,
        format: 'YYYY-MM-DD HH:mm:ss',
        valueFormat: 'YYYY-MM-DD HH:mm:ss',
      },<{else if $value.htmlType == 'date'}>
      componentProps: {
        format: 'YYYY-MM-DD',
        valueFormat: 'YYYY-MM-DD',
      },<{else if $value.htmlType == 'time'}>
      componentProps: {
        format: 'HH:mm:ss',
        valueFormat: 'HH:mm:ss',
      },<{/if}>
    },
  <{/if}>

<{/each}>
];
